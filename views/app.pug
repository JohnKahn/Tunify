doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    meta(http-equiv="X-UA-Compatible" content="ie=edge")
    meta(name="theme-color" content="#2da455")
    title Tunify

    link(rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css"
      integrity="sha512-M2wvCLH6DSRazYeZRIm1JnYyh22purTM+FDB5CsyxtQJYeKq83arPe5wgbNmcFXGqiSH2XR8dT/fJISVA1r/zQ=="
      crossorigin="")
    script(src="https://code.jquery.com/jquery-3.2.1.min.js"
      integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
      crossorigin="anonymous")
    script(src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"
      integrity="sha512-lInM/apFSqyy1o6s89K4iQUKg6ppXEgsVxT35HbzUupEVRh2Eu9Wdl4tHj7dZO0s1uvplcYGmt3498TtHq+log=="
      crossorigin="")
    link(href="https://fonts.googleapis.com/css?family=Raleway:300,400" rel="stylesheet")
    link(href="/style.css" rel="stylesheet")
  body
    div#modalWrapper
      div#modal
        h1 New Playlist
        form#newPlaylistForm
          div
            input#name(type="text" name="name" placeholder="Name")
          div
            input#description(type="text" name="name" placeholder="Description")
          button#loginSpotifyButton.greenButton(type="submit") Create Playlist
        p#successMessage
        a(href="#" onclick="closeModal()") Close
    a#newPlaylistButton.greenButton(href="#") Create a Playlist
    div#mapid

    script.
      $('#newPlaylistForm').submit(function(e) {
        e.preventDefault();

        var name = $('#name').val();
        var description = $('#description').val();

        if (!!name && name.length > 0) {
          $.post('/playlist', {
            access_token: "!{access_token}",
            user_id: "!{user_id}",
            name: name,
            description: description,
            latitude: gLatitude,
            longitude: gLongitude,
          }, function(data) {
            $('#newPlaylistForm').css('display', 'none');
            if (data.error) {
              $('#successMessage').text('Their was an error, refresh and try again');
            } else {
              $('#modalWrapper').css('display', 'none');
            }
          }, 'json');
        } else {
          alert('Name is required');
        }

        return false;
      });

      function closeModal() {
        $('#modalWrapper').css('display', 'none');
      }

    script.
      document.getElementById('newPlaylistButton').onclick = function() {
        document.getElementById('modalWrapper').style.display = 'block';
        $('#newPlaylistForm').css('display', 'block');
      };

      var mapView = L.map('mapid');
      var gLatitude, gLongitude;

      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(p) {
          mapView.setView([p.coords.latitude, p.coords.longitude], 17);

          L.tileLayer(
            'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',
            {
              maxZoom: 18,
              id: 'mapbox.streets',
              accessToken:
                'pk.eyJ1Ijoiam9obmthaG4iLCJhIjoiY2o5YnFheWl3MWlpZDMyb3lsaGxmY3YzcSJ9.x2KFy11JppXkU68Usur4UA',
            }
          ).addTo(mapView);

          var locMarker = L.marker([p.coords.latitude, p.coords.longitude]).addTo(mapView);

          setInterval(function() {
            navigator.geolocation.getCurrentPosition(function(p) {
              gLatitude = p.coords.latitude;
              gLongitude = p.coords.longitude;
              locMarker.setLatLng(L.latLng(gLatitude, gLongitude));
            });
          }, 5000);

          var playlists = !{JSON.stringify(playlists)};
          var layers = [];

          playlists.forEach(function(list) {
            if (list.isPoly) {
              var newLayer = {
                layer: L.polygon(list.polygon, {
                  color: '#25cf5f',
                  fillColor: '#25cf5f',
                  fillOpacity: 0.5,
                  interactive: false,
                }).addTo(mapView),
                isLarge: list.isLarge,
              };

              newLayer.popup = newLayer.layer.bindPopup(L.popup({
                closeOnClick: false,
                autoClose: false,
                closeButton: false,
                autoPan: false,
              }).setContent(
                `<a target="_BLANK" href="https://open.spotify.com/user/${list.userId}/playlist/${list.spotifyId}"><img src="${list.imageUrl}" width="100" /></a>`
              )).openPopup();

              layers.push(newLayer);
            } else {
              layers.push({
                layer: L.circle([list.latitude, list.longitude], {
                  color: '#25cf5f',
                  fillColor: '#25cf5f',
                  fillOpacity: 0.5,
                  radius: list.radius,
                  interactive: false,
                }),
                isLarge: list.isLarge,
                maxZoom: list.isLarge ? 13 : 100,
                minZoom: list.isLarge ? 12 : 0,
              });
            }
          });

          mapView.setView([p.coords.latitude, p.coords.longitude], 17);
          mapView.setView([30.279886818182, -97.752675636364], 13);
          
          function onZoom(ev) {
            if (mapView.getZoom() <= 12) {
              layers.filter(function(layer) {
                return layer.isLarge;
              }).forEach(function(layer) {
                layer.layer.addTo(mapView);
                if (!!layer.popup) {
                  layer.popup.openPopup();
                }
              });
              
              layers.filter(function(layer) {
                return !layer.isLarge;
              }).forEach(function(layer) {
                layer.layer.removeFrom(mapView);
              });
            } else {
              layers.filter(function(layer) {
                return layer.isLarge;
              }).forEach(function(layer) {
                layer.layer.removeFrom(mapView);
              });
              
              layers.filter(function(layer) {
                return !layer.isLarge;
              }).forEach(function(layer) {
                layer.layer.addTo(mapView);
                if (!!layer.popup) {
                  layer.popup.openPopup();
                }
              });
            }
          }

          mapView.on('zoomend', onZoom);
          onZoom(null);
        });
      } else {
        alert('GPS is not available on this device');
      }

